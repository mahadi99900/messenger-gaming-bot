// downloader.js

const fs = require('fs');
const path = require('path');
const ytDlpExec = require('yt-dlp-exec');

let isDownloading = false;

module.exports = async function handleDownloaderCommand(api, event, config) {
    const message = event.body;
    const prefix = config.PREFIX; // config ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡ßç‡¶∞‡¶ø‡¶´‡¶ø‡¶ï‡ßç‡¶∏ ‡¶®‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá

    if (!message.startsWith(prefix)) return;

    const args = message.slice(prefix.length).trim().split(/ +/);
    const command = args.shift().toLowerCase();

    if (command === "dl" || command === "youtube" || command === "facebook") {
        if (isDownloading) {
            api.sendMessage("‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ö‡¶≤‡¶õ‡ßá‡•§ ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
            return;
        }

        const url = args[0];
        if (!url) {
            api.sendMessage(`‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: ${prefix}dl <video_url>`, event.threadID, event.messageID);
            return;
        }

        isDownloading = true;
        const replyMsg = await api.sendMessage("üì• ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...", event.threadID, event.messageID);
        
        const output_template = path.join(__dirname, `${Date.now()}.%(ext)s`);
        let videoFilePath = '';

        try {
            await ytDlpExec(url, {
                output: output_template,
                format: 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best',
                maxFilesize: '50m'
            });

            // Find the downloaded file
            const files = fs.readdirSync(__dirname);
            const downloadedFile = files.find(file => file.startsWith(path.basename(output_template, '.%(ext)s')));
            
            if (!downloadedFile) {
                throw new Error("‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§");
            }
            videoFilePath = path.join(__dirname, downloadedFile);

            await api.editMessage("‚úÖ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®! ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...", replyMsg.messageID);

            await api.sendMessage({
                body: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì!",
                attachment: fs.createReadStream(videoFilePath)
            }, event.threadID);

        } catch (error) {
            console.error("‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø:", error);
            api.sendMessage(`‚ùå ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶è‡¶ï‡¶ü‡¶ø ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá‡•§`, event.threadID, event.messageID);
        
        } finally {
            if (videoFilePath && fs.existsSync(videoFilePath)) {
                fs.unlinkSync(videoFilePath);
            }
            isDownloading = false;
            if (replyMsg) {
                await api.unsendMessage(replyMsg.messageID);
            }
        }
    }
};